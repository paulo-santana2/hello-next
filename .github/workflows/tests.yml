name: Testes

on: [pull_request]

jobs:
  mark-commit-status-pending:
    name: Marcar "status" do commit como "pending"
    runs-on: ubuntu-latest
    steps:
      - name: Fazer request contra a API do Github com status "pending"
        run: |
          curl -L -X POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "state": "pending",
            "context": "tests",
            "description": "Aguardando os testes"
            }'

  build-and-test:
    name: Rodar os testes localmente
    runs-on: ubuntu-latest

    
    steps:
    - name: puxar o código do cmmit
      uses: actions/checkout@v2

    - name: Instalar o Node.js
      uses: actions/setup-node@v1

    - name: Instalar as dependências do npm
      run: npm install
      
    - name: rodar os testes
      run: npm test
      
    - name: Fazer request contra a API do Github final
      if: always()
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: |
        GITHUB_WORKFLOW_URL=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
        JOB_STATUS=$(echo ${JOB_CONTEXT} | jq --raw-output '.status | ascii_downcase')
        curl -L -X POST \
        --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "state": "'${JOB_STATUS}'",
          "context": "tests",
          "description": "Finalizados os testes localmente",
          "target_url": "'${GITHUB_WORKFLOW_URL}'"
          }'
